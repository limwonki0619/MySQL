-- 04. JOIN, SUBQUERY 연습문제 

-- 연습문제 1. 학생(STUDENT)테이블과 수강(ENROL)테이블을 NATURAL JOIN하라.
SELECT * FROM STUDENT NATURAL JOIN ENROL;

-- 연습문제 2. 학번(STU_NO), 이름(STU_NAME), 과목이름(SUB_NAME), 점수(ENR_GRADE)를 검색하라(EQUI JOIN)
SELECT * FROM STUDENT;
SELECT * FROM SUBJECT;
SELECT * FROM ENROL;

SELECT STUDENT.STU_NO, STU_NAME, SUB_NAME, ENR_GRADE 
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO
    AND ENROL.SUB_NO = SUBJECT.SUB_NO;
    
-- 연습문제 3. 과목이름과 학번, 점수를 검색하라(NATURAL JOIN)
SELECT SUB_NAME, STU_NO, ENR_GRADE
FROM SUBJECT NATURAL JOIN ENROL;

-- 연습문제 4. 과목이름과 학번, 점수를 검색하라(JOIN USING)
SELECT SUB_NAME, STU_NO, ENR_GRADE
FROM SUBJECT JOIN ENROL USING(SUB_NO);

-- 연습문제 5. 점수가 70점 이상인 학생 이름을 검색하라(EQUI JOIN)
SELECT STU_NAME, ENR_GRADE 
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
    AND ENR_GRADE >= 70;

-- 연습문제 6. 점수가 60점 이상인 학생 이름을 검색하라(JOIN USING)
SELECT STU_NAME, ENR_GRADE 
FROM STUDENT JOIN ENROL USING(STU_NO)
    WHERE ENR_GRADE >= 60;
    
-- 연습문제 7. 점수가 70점 이하인 학생 이름을 검색하라(NATURAL JOIN)
SELECT STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL
    WHERE ENR_GRADE <= 70;
    
-- 연습문제 8. 김인중 학생이 수강하는 과목이름과 강의 교수를 검색하라. (EQUI JOIN)
SELECT STU_NAME, SUB_NAME, SUB_PROF
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO
    AND ENROL.SUB_NO = SUBJECT.SUB_NO
    AND STU_NAME = '김인중';
    
-- 연습문제 9. 김인중 학생이 수강하는 과목이름과 강의 교수를 검색하라. (NATURAL JOIN)
SELECT STUDENT.STU_NAME, SUB_NAME, SUB_PROF
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_NAME ='김인중';

-- 연습문제 10. 김인중 학생이 수강하는 과목이름과 강의 교수를 검색하라. (JOIN USING)
SELECT STUDENT.STU_NAME, SUB_NAME, SUB_PROF
FROM STUDENT JOIN ENROL USING(STU_NO) JOIN SUBJECT USING(SUB_NO)
WHERE STU_NAME ='김인중';

-- 연습문제 11. 김종영 교수가 강의하는 과목을 수강하는 학생의 이름을 검색하라.
SELECT SUB_PROF, STU_NAME
FROM SUBJECT NATURAL JOIN ENROL NATURAL JOIN STUDENT
WHERE SUB_PROF = '강종영';

-- 연습문제 12. 컴퓨터개론을 수강하는 학생들의 학번과 이름을 검색하라. 
SELECT STU_NO, STU_NAME, SUB_NAME
FROM SUBJECT NATURAL JOIN ENROL NATURAL JOIN STUDENT
WHERE SUB_NAME = '컴퓨터개론';

-- 연습문제 13. 시스템분석설계, 소프트웨어공학을 수강하는 학생들의 학번, 이름을 학번순으로 검색하라
SELECT STU_NO, STU_NAME, SUB_NAME
FROM SUBJECT NATURAL JOIN ENROL NATURAL JOIN STUDENT
WHERE SUB_NAME = '시스템분석설계' OR SUB_NAME = '소프트웨어공학'
ORDER BY 1;

-- 연습문제 14. 과목이 1학년 과목이거나, 컴퓨터정보과에 개설된 과목일 경우, 그 과목들을 수강하는 학생들의 학번과 이름을 검색하라.
SELECT STU_NO, STU_NAME, SUB_NAME, SUB_GRADE, SUB_DEPT
FROM SUBJECT NATURAL JOIN ENROL NATURAL JOIN STUDENT
WHERE SUB_GRADE = 1 OR SUB_DEPT = '컴퓨터정보';

-- 연습문제 15. 기계공작법, 기초전자실험을 수강하는 학생들의 학번, 이름을 학번순으로 검색하라. (NATRUAL JOIN)
SELECT STU_NO, STU_NAME, SUB_NAME
FROM ENROL NATURAL JOIN SUBJECT NATURAL JOIN STUDENT
WHERE SUB_NAME IN ('기계공작법', '기초전자실험')
ORDER BY 1;

-- 연습문제 16. 김태영교수, 김유석 교수가 강의하는 과목을 수강하는 학생의 학번을 검색하라. (JOIN USING)
SELECT STU_NO, STU_NAME, SUB_PROF, SUB_NAME
FROM ENROL JOIN SUBJECT USING(SUB_NO) JOIN STUDENT USING(STU_NO)
WHERE SUB_PROF IN ('김태영', '김유석');

-- 연습문제 17. 학생의 이름과 점수를 검색하라. 
SELECT * FROM STUDENT;
SELECT * FROM SUBJECT;
SELECT * FROM ENROL;

SELECT STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL;

-- 연습문제 18. 이름이 '옥한빛'인 학생이 수강하는 과목이름을 검색하라.
SELECT STU_NAME, SUB_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_NAME = '옥한빛';

-- 연습문제 19. 여학생이 수강중인 과목의 과목이름을 모두 검색하라. 
SELECT STU_NAME, SUB_NAME, STU_GENDER
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_GENDER = 'F';


-- 연습문제 20. 체중이 60 이상인 학생이 수강하는 과목의 과목이름을 모두 검색하라.
SELECT STU_NAME, SUB_NAME, STU_WEIGHT
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_WEIGHT >= 60;

-- 연습문제 21. 컴퓨터정보과에 개설된 과목을 수강하는 모든 학생의 학번과 이름을 검색하라.
SELECT STU_NO, STU_NAME, SUB_DEPT
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_DEPT = '컴퓨터정보';

-- 연습문제 22. 점수가 70점 이상인 학생 수를 검색하라. 
SELECT COUNT(*)
FROM STUDENT NATURAL JOIN ENROL
WHERE ENR_GRADE >= 70;

-- 연습문제 23. 여학생이면서, 구봉규 교수의 과목을 수강하는 학생의 이름을 검색하라.
SELECT STU_NAME, STU_GENDER, SUB_PROF
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_GENDER = 'F' AND SUB_PROF = '구봉규';

-- 연습문제 24. 김종헌 학생의 평균점수보다 높은 점수를 가진 학생의 학번과 이름을 검색하라.
SELECT STU_NO, STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL
WHERE ENR_GRADE > (SELECT AVG(ENR_GRADE) 
    FROM STUDENT NATURAL JOIN ENROL 
    WHERE STU_NAME = '김종헌');
    
    
-- 연습문제 25. 김인중 학생의 평균 점수보다 낮은 점수를 가진 학생의 학번과 이름을 검색하라.
SELECT STU_NO, STU_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL
WHERE ENR_GRADE < (SELECT AVG(ENR_GRADE) 
    FROM STUDENT NATURAL JOIN ENROL 
    WHERE STU_NAME = '김인중');


-- 연습문제 26. 전체 학생의 평균 점수보다 점수가 높은 학생의 학번, 이름, 과목이름, 점수를 검색하라.
SELECT STU_NO, STU_NAME, SUB_NAME, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE ENR_GRADE > (SELECT AVG(ENR_GRADE) 
    FROM STUDENT NATURAL JOIN ENROL);

-- 연습문제 27. 점수가 각 학과 학생들의 평균 점수보다 높은 학생의 학번을 검색하라.
SELECT STU_NO
FROM ENROL
WHERE ENR_GRADE > ALL (SELECT AVG(ENR_GRADE)
                        FROM STUDENT A, ENROL B
                        WHERE A.STU_NO = B.STU_NO
                        GROUP BY A.STU_DEPT);
                        
-- 연습문제 28. 기계과의 최고 점수 학생보다 최고 점수가 높은 학과의 학과명과 점수를 검색하라.
SELECT A.STU_DEPT, MAX(B.ENR_GRADE)
FROM STUDENT A, ENROL B 
WHERE A.STU_NO = B.STU_NO
GROUP BY A.STU_DEPT
HAVING MAX(B.ENR_GRADE) > (SELECT MAX(ENR_GRADE) 
                             FROM STUDENT JOIN ENROL USING(STU_NO)
                             WHERE STU_DEPT = '기계');

-- 연습문제 29. 컴퓨터정보과 학생들의 평균 점수를 구해 학생들의 학번과 이름 평균 점수를 성적 순으로 검색하라.
SELECT STU_NO, STU_NAME, AVG(ENR_GRADE) 
FROM STUDENT NATURAL JOIN ENROL
WHERE STU_DEPT = '컴퓨터정보'
GROUP BY STU_NO, STU_NAME
ORDER BY 3 DESC;

-- 연습문제 30. 시스템분석설계 과목을 수강한 학생들의 학번, 이름, 점수를 성적 순으로 검색하라.
SELECT STU_NO, STU_NAME, ENR_GRADE, SUB_NAME
FROM ENROL NATURAL JOIN SUBJECT NATURAL JOIN STUDENT
WHERE SUB_NAME = '시스템분석설계'
ORDER BY 3 DESC;

-- 연습문제 31. 2과목 이상 수강한 학생들의 학번, 이름, 수강과목 수를 수강과목이 많은 순으로 검색하라.
SELECT STU_NO, STU_NAME, COUNT(STU_NO)
FROM ENROL NATURAL JOIN STUDENT NATURAL JOIN SUBJECT
GROUP BY STU_NO, STU_NAME
HAVING COUNT(STU_NO) >= 2;

-- 연습문제 32. 1과목을 수강한 학생들의 학번, 이름을 학과별 학번 순으로 검색하라.
SELECT STU_NO, STU_NAME, STU_DEPT, COUNT(STU_NO)
FROM ENROL NATURAL JOIN STUDENT NATURAL JOIN SUBJECT
GROUP BY STU_NO, STU_NAME, STU_DEPT
HAVING COUNT(STU_NO) = 1
ORDER BY STU_DEPT, STU_NO DESC;


-- 연습문제 33. 컴퓨터정보과 학생들 중 평균 점수가 최고인 학생의 학번, 이름, 평균 점수를 검색하라
SELECT *
FROM ( 
    SELECT STU_NO, STU_NAME, STU_DEPT, AVG(ENR_GRADE) 
    FROM STUDENT NATURAL JOIN ENROL
    GROUP BY STU_NO, STU_NAME, STU_DEPT
    ORDER BY 4 DESC 
    )
WHERE ROWNUM = 1;


-- 연습문제 34. 컴퓨터개론과 시스템분석설계 과목을 수강하는 학생의 학번, 이름을 학번 순으로 검색하라. 
SELECT STU_NO, STU_NAME, SUB_NAME 
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_NAME IN ('컴퓨터개론', '시스템분석설계')
ORDER BY 1;
